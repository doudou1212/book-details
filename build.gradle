plugins {
	id 'org.springframework.boot' version '2.2.5.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id "org.flywaydb.flyway" version "6.1.3"
}

project(":") {
	group = 'com.graphql-java.tutorial'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '11'

	repositories {
		jcenter()
		mavenCentral()
		maven {
			url = "http://rea-sonatype-nexus.delivery.realestate.com.au/nexus/content/repositories/releases"
		}
	}

	flyway {
		url = "jdbc:postgresql://${project.findProperty("dbHost") ?: "localhost"}:5439/book"
		user = 'book'
		password = 'book'
	}


	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		compile 'com.graphql-java-kickstart:graphql-spring-boot-starter:5.10.0'
		implementation 'com.google.guava:guava:26.0-jre' // NEW
		implementation 'org.postgresql:postgresql:42.2.8'
		implementation 'org.flywaydb:flyway-core:5.+'
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation('org.springframework.boot:spring-boot-starter-test') {
			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
		}
	}

	test {
		useJUnitPlatform()
	}
}
